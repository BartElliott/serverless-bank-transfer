service: serverless-bank-transfer

provider:
  name: aws
  runtime: java8
  region: 'us-east-1'
  stage: 'dev'
  environment:
    balancesTableName: balancesTable
    transfersTableName: transfersTable

package:
  artifact: target/scala-2.12/transfer.jar

functions:
  scheduleTransfer:
    handler: transfer.schedule.ApiGatewayHandler
    events:
      - http:
          path: transfer/schedule
          method: post
          cors: true

resources:
  Resources:
    balancesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: balances
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    transfersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: transfers
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
  Outputs:
    BalancesTableArn:
      Description: The ARN for the Balances Table
      Value:
        "Fn::GetAtt": [ balancesTable, Arn ]
      Export:
        Name: ${self:service}:dev:BalancesTableArn
    TransfersTableArn:
      Description: The ARN for the Transfers Table
      Value:
        "Fn::GetAtt": [ transfersTable, Arn ]
      Export:
        Name: ${self:service}:dev:TransfersTableArn
