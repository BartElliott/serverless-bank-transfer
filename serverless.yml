service: serverless-bank-transfer

provider:
  name: aws
  runtime: java8
  region: 'us-east-1'
  stage: 'dev'
  environment:
    balancesTableName: balancesTable
    transfersTableName: transfersTable
    scheduledTransfersName: scheduledTransfers
  iamRoleStatements:
    - Effect: Allow
      Action:
        - 'sqs:*' # TODO: spell out and limit these permissions. GetQueueDetails?
      Resource:
        - { "Fn::GetAtt": [ scheduledTransfers, "Arn" ] }
        - { "Fn::GetAtt": [ executedTransfers, "Arn" ] }
    - Effect: Allow
      Action:
        - 'dynamodb:GetItem'
        - 'dynamodb:PutItem'
        - 'dynamodb:DeleteItem'
      Resource:
        - { "Fn::GetAtt": [balancesTable, "Arn"] }
        - { "Fn::GetAtt": [transfersTable, "Arn"] }

package:
  artifact: target/scala-2.12/transfer.jar

functions:
  scheduleTransfer:
    handler: transfer.schedule.ApiGatewayHandler
    events:
      - http:
          path: transfer/schedule
          method: post
          cors: true
  executeTransfer:
    handler: transfer.execute.Handler
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - scheduledTransfers
              - Arn
          batchSize: 10

resources:
  Resources:
    # Dynamo db
    balancesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: balances
        AttributeDefinitions:
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: username
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    transfersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: transfers
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

    # SQS queues
    scheduledTransfers:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: scheduled-transfers
        MessageRetentionPeriod: 1209600
        VisibilityTimeout: 60
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
            - scheduledTransfersDeadLetterQueue
            - Arn
          maxReceiveCount: 10
    scheduledTransfersDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: scheduled-transfers-dead-letter-queue
        MessageRetentionPeriod: 1209600

    executedTransfers:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: executed-transfers
        MessageRetentionPeriod: 1209600
        VisibilityTimeout: 60
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
            - executedTransfersDeadLetterQueue
            - Arn
          maxReceiveCount: 10
    executedTransfersDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: executed-transfers-dead-letter-queue
        MessageRetentionPeriod: 1209600

  Outputs:
    BalancesTableArn:
      Description: The ARN for the Balances Table
      Value:
        "Fn::GetAtt": [ balancesTable, Arn ]
      Export:
        Name: ${self:service}:dev:BalancesTableArn
    TransfersTableArn:
      Description: The ARN for the Transfers Table
      Value:
        "Fn::GetAtt": [ transfersTable, Arn ]
      Export:
        Name: ${self:service}:dev:TransfersTableArn
    ScheduledTransfersSqsArn:
      Description: The ARN for the scheduled-transfers SQS
      Value:
        "Fn::GetAtt": [ scheduledTransfers, Arn ]
      Export:
        Name: ${self:service}:dev:ScheduledTransfersSqsArn
    ExecutedTransfersSqsArn:
      Description: The ARN for the executed-transfers SQS
      Value:
        "Fn::GetAtt": [ executedTransfers, Arn ]
      Export:
        Name: ${self:service}:dev:ExecutedTransfersSqsArn
